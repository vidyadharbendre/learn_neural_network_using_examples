{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"4. Check Anchor Boxes","private_outputs":true,"provenance":[],"collapsed_sections":["c2zIuU2I70fY","oF-qYb5Km3DC"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"cells":[{"cell_type":"markdown","metadata":{"id":"c2zIuU2I70fY"},"source":["#### 1. Install TensorFlow Object Detection API\n","- Please make sure you have installed tensorflow or tensorflow-gpu already. \n","- Currently API requires TF 1.14 version (2.0 support will come in due course)\n","- For latest install instructions, check the [github](https://github.com/tensorflow/models/tree/master/research/object_detection) page or [readthedocs](https://tensorflow-object-detection-api-tutorial.readthedocs.io/en/latest/training.html) site for this API."]},{"cell_type":"code","metadata":{"id":"fEfpwOh7GiE-"},"source":["#Check the version of tf currently installed\n","!pip list | grep tensorflow"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ReVA6PLWe7mx"},"source":["!pip uninstall tensorflow --quiet"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E3JtLAC-f9HF"},"source":["!pip install tensorflow-gpu==1.14.0 --quiet"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qckkMYhz7LT2"},"source":["#Check the version of tf currently installed\n","!pip list | grep tensorflow"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YmNitZeF-Q4L"},"source":["Clone git repo tensorflow/models"]},{"cell_type":"code","metadata":{"id":"eN25sglu-PFr"},"source":["!git clone https://github.com/tensorflow/models"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7SnDUOk_-ZdN"},"source":["#Verify that models folder exist\n","!ls -l"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MK9x4MwC-jRf"},"source":["#Multiple folders including object_detection should exist in models/research folder\n","!ls -l models/research/"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WPWh1kko-7Aq"},"source":["Install other dependencies including protobuf compiler"]},{"cell_type":"code","metadata":{"id":"_WZzKugC-6F_"},"source":["!apt-get -qq install protobuf-compiler python-pil python-lxml python-tk\n","!pip install --user Cython  --quiet\n","!pip install --user contextlib2 --quiet\n","!pip install --user jupyter --quiet\n","!pip install --user matplotlib --quiet"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"legL3ykhAG55"},"source":["Protobuf compilation\n","- Convert .pb files to python code in object detection folder"]},{"cell_type":"code","metadata":{"id":"KpAYW6RXAdIf"},"source":["#Move to models/research folder\n","%cd models/research\n","\n","#Convert protobuf files to Python code using Protobuf compiler installed in previous step\n","!protoc object_detection/protos/*.proto --python_out=."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1-E2GGJBRvr_"},"source":["!ls -l object_detection/protos"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1kPSCzlpBr7M"},"source":["Setup environment variable"]},{"cell_type":"code","metadata":{"id":"oiyiHeCWBupo"},"source":["#Change path to models/research and models/research/slim folders based on where you have cloned github repository above\n","%set_env PYTHONPATH=$PYTHONPATH:/content/models/research:/content/models/research/slim"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JoY976saCDrr"},"source":["Test Installation"]},{"cell_type":"code","metadata":{"id":"GF7J_HFXCBFt"},"source":["#To be run from models/research folder\n","!python object_detection/builders/model_builder_test.py"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oF-qYb5Km3DC"},"source":["#### Check Anchor Boxes"]},{"cell_type":"code","metadata":{"id":"JjqS1iK0pS1p"},"source":["import warnings\n","warnings.filterwarnings(\"ignore\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K1Jd4KDQm82o"},"source":["Reference -> https://gist.github.com/david-macleod/60cb2b00616562b9b613bea618f9956b"]},{"cell_type":"code","metadata":{"id":"SvrO2RoxoeuV"},"source":["import sys\n","sys.path.append('/content/models/research')\n","sys.path.append('/content/models/research/slim')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FhJDU0k4m5Vk"},"source":["import tensorflow as tf \n","from object_detection.anchor_generators.multiple_grid_anchor_generator import create_ssd_anchors\n","from object_detection.models.ssd_mobilenet_v2_feature_extractor_test import SsdMobilenetV2FeatureExtractorTest\n","import matplotlib.pyplot as plt\n","from matplotlib import patches\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vCX0cD3rnJUT"},"source":["Understand feature map shapes"]},{"cell_type":"code","metadata":{"id":"ry76sIipnIvl"},"source":["def get_feature_map_shapes(image_height, image_width):\n","    \"\"\"\n","    :param image_height: height in pixels\n","    :param image_width: width in pixels\n","    :returns: list of tuples containing feature map resolutions\n","    \"\"\"\n","    \n","    feature_extractor = SsdMobilenetV2FeatureExtractorTest()._create_feature_extractor(\n","        depth_multiplier=1,\n","        pad_to_multiple=1,\n","    )\n","    \n","    image_batch_tensor = tf.zeros([1, image_height, image_width, 1])\n","    \n","    return [tuple(feature_map.get_shape().as_list()[1:3])\n","            for feature_map in feature_extractor.extract_features(image_batch_tensor)]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FNEVL_IXnYvB"},"source":["Anchor Boxes for each feature map"]},{"cell_type":"code","metadata":{"id":"6HIXvIfwnWjv"},"source":["def get_feature_map_anchor_boxes(feature_map_shape_list, **anchor_kwargs):\n","    \"\"\"\n","    :param feature_map_shape_list: list of tuples containing feature map resolutions\n","    :returns: dict with feature map shape tuple as key and list of [ymin, xmin, ymax, xmax] box co-ordinates\n","    \"\"\"\n","    anchor_generator = create_ssd_anchors(**anchor_kwargs)\n","\n","    anchor_box_lists = anchor_generator.generate(feature_map_shape_list)\n","    \n","    feature_map_boxes = {}\n","\n","    with tf.Session() as sess:\n","        for shape, box_list in zip(feature_map_shape_list, anchor_box_lists):\n","            feature_map_boxes[shape] = sess.run(box_list.data['boxes'])\n","            \n","    return feature_map_boxes"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TnMnbwBCnmRK"},"source":["Drawing anchor boxes"]},{"cell_type":"code","metadata":{"id":"mwpLOQuPnjan"},"source":["def draw_boxes(boxes, figsize, nrows, ncols, grid=(0,0)):\n","\n","    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=figsize) \n","\n","    for ax, box in zip(axes.flat, boxes):\n","        ymin, xmin, ymax, xmax = box\n","        ax.add_patch(patches.Rectangle((xmin, ymin), xmax-xmin, ymax-ymin, \n","                                fill=False, edgecolor='red', lw=2))\n","\n","        # add gridlines to represent feature map cells\n","        ax.set_xticks(np.linspace(0, 1, grid[0] + 1), minor=True)\n","        ax.set_yticks(np.linspace(0, 1, grid[1] + 1), minor=True)\n","        ax.grid(True, which='minor', axis='both')\n","              \n","    fig.tight_layout()\n","    \n","    return fig"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VHjy6EXXo8cx"},"source":["tf.reset_default_graph()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RAm3Vn_Bnsb8"},"source":["feature_map_size = get_feature_map_shapes(300,300)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Tm7RSks_qiGs"},"source":["feature_map_size"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tw1nFOdnqlZS"},"source":["anchor_boxes = get_feature_map_anchor_boxes(feature_map_size)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gXpbKf51qpPm"},"source":["anchor_boxes"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Qf0P7-piq9fm"},"source":["anchor_boxes.keys()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4t2wzSpErDOZ"},"source":["anchor_boxes[(2,2)].shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_er07QurqvO6"},"source":["draw_boxes(anchor_boxes[(2,2)] , figsize=(15,15), nrows=6, ncols=4)"],"execution_count":null,"outputs":[]}]}